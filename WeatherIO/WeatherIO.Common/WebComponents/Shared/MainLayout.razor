@inherits LayoutComponentBase

@inject IConfigurationProviderService ConfigurationProviderService
@inject NavigationManager NavigationManager

<MudThemeProvider @ref="@ConfigurationProviderService.MudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Weather.io</MudText>
        <MudSpacer />
        <MudMenu Icon="@Icons.Material.Filled.Settings" Color="Color.Tertiary">
            <MudMenuItem OnClick="Login">Login</MudMenuItem>
            <MudMenuItem OnClick="Register">Register</MudMenuItem>
            <MudMenuItem OnClick="Settings">Settings</MudMenuItem>
        </MudMenu>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    private bool _isDarkMode;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private void Login()
    {
        NavigationManager.NavigateTo("/login");
    }

    private void Register()
    {
        NavigationManager.NavigateTo("/register");
    }

    private void Settings()
    {
        NavigationManager.NavigateTo("/settings");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await ConfigurationProviderService.LoadConfigurationAsync();
            StateHasChanged();
        }
    }
}
